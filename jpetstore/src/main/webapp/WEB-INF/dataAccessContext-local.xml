<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "https://www.springframework.org/dtd/spring-beans-2.0.dtd">

<!--
  - Application context definition for JPetStore's data access layer.
  - Accessed by business layer objects defined in "applicationContext.xml"
  - (see web.xml's "contextConfigLocation").
  -
  - This version of the data access layer works on a combined database,
  - using a local DataSource with DataSourceTransactionManager. It does not
  - need any JTA support in the container: It will run as-is in plain Tomcat.
  -->
<beans>

	<!-- ========================= RESOURCE DEFINITIONS ========================= -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.sqlfire.driverClassName}"/>
		<property name="url" value="${jdbc.sqlfire.url}"/>
	</bean>

	<!-- Transaction manager for a single JDBC DataSource -->
	<!-- (see dataAccessContext-jta.xml for an alternative) -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- ========================= DAO DEFINITIONS: Spring Data IMPLEMENTATIONS ========================= -->

	<bean id="accountDao" class="org.springframework.samples.jpetstore.dao.springdata.SpringDataAccountDao">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<bean id="categoryDao" class="org.springframework.samples.jpetstore.dao.springdata.SpringDataCategoryDao">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<bean id="productDao" class="org.springframework.samples.jpetstore.dao.springdata.SpringDataProductDao">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<bean id="itemDao" class="org.springframework.samples.jpetstore.dao.springdata.SpringDataItemDao">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<bean id="orderDao" class="org.springframework.samples.jpetstore.dao.springdata.SpringDataOrderDao">
		<property name="dataSource" ref="dataSource"/>
		<property name="springDataSequenceDao" ref="sequenceDao"/>
	</bean>

	<bean id="sequenceDao" class="org.springframework.samples.jpetstore.dao.springdata.SpringDataSequenceDao">
		<property name="dataSource" ref="dataSource"/>
	</bean>

</beans>
